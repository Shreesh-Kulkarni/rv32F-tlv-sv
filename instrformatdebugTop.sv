/ Generated by SandPiper(TM) 1.14-2022/10/10-beta-Pro from Redwood EDA, LLC.
// (Installed here: /usr/local/mono/sandpiper/distro.)
// Redwood EDA, LLC does not claim intellectual property rights to this file and provides no warranty regarding its correctness or quality.


// For silencing unused signal messages.
`define BOGUS_USE(ignore)





//
// Signals declared top-level.
//

// For $reset.
logic L0_reset_a0;

// For |pipe$instr.
logic [31:0] PIPE_instr_a1;

// For |pipe$is_load_store.
logic PIPE_is_load_store_a1;

// For |pipe$r_rand.
logic [31:0] PIPE_r_rand_a0,
             PIPE_r_rand_a1;

// For |pipe$rand.
logic [31:0] PIPE_rand_a1;




   //
   // Scope: |pipe
   //

      // Staging of random value for missing assignment.
      assign PIPE_r_rand_a0[31:0] = $random() ^ {31'b0, clk};
      always_ff @(posedge clk) PIPE_r_rand_a1[31:0] <= PIPE_r_rand_a0[31:0];

      // Staging of signal $rand, which had no assignment.
      // Assign to a random value.
      // verilator lint_save
      // verilator lint_off WIDTH
      assign PIPE_rand_a1[31:0] = PIPE_r_rand_a1;
      // verilator lint_restore






//
// Debug Signals
//

   if (1) begin : DEBUG_SIGS

      logic  \@0$reset ;
      assign \@0$reset = L0_reset_a0;

      //
      // Scope: |pipe
      //
      if (1) begin : \|pipe 
         logic [31:0] \/@1$instr ;
         assign \/@1$instr = PIPE_instr_a1;
         logic  \/@1$is_load_store ;
         assign \/@1$is_load_store = PIPE_is_load_store_a1;
         logic [31:0] \>@1$rand ;
         assign \>@1$rand = PIPE_rand_a1;
      end


   end

